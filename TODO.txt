problemi di privilegi e display swing su linux

2021-07-17 16:38:43 - [INFO] start internal job
2021-07-17 16:38:43 - [INFO] job jar is /tmp/jarbox20210717143843/job/job/MoreItalians-1.0.0-SNAPSHOT.jar
Ciao Patrizia Gualterio
Exception in thread "main" java.awt.AWTError: Assistive Technology not found: org.GNOME.Accessibility.AtkWrapper
	at java.awt.Toolkit.loadAssistiveTechnologies(Toolkit.java:807)
	at java.awt.Toolkit.getDefaultToolkit(Toolkit.java:886)
	at sun.swing.SwingUtilities2.getSystemMnemonicKeyMask(SwingUtilities2.java:2032)
	at javax.swing.plaf.basic.BasicLookAndFeel.initComponentDefaults(BasicLookAndFeel.java:1158)
	at javax.swing.plaf.metal.MetalLookAndFeel.initComponentDefaults(MetalLookAndFeel.java:431)
	at javax.swing.plaf.basic.BasicLookAndFeel.getDefaults(BasicLookAndFeel.java:148)
	at javax.swing.plaf.metal.MetalLookAndFeel.getDefaults(MetalLookAndFeel.java:1577)
	at javax.swing.UIManager.setLookAndFeel(UIManager.java:539)
	at javax.swing.UIManager.setLookAndFeel(UIManager.java:579)
	at javax.swing.UIManager.initializeDefaultLAF(UIManager.java:1349)
	at javax.swing.UIManager.initialize(UIManager.java:1459)
	at javax.swing.UIManager.maybeInitialize(UIManager.java:1426)
	at javax.swing.UIManager.getUI(UIManager.java:1006)
	at javax.swing.JOptionPane.updateUI(JOptionPane.java:1882)
	at javax.swing.JOptionPane.<init>(JOptionPane.java:1845)
	at javax.swing.JOptionPane.showOptionDialog(JOptionPane.java:857)
	at javax.swing.JOptionPane.showMessageDialog(JOptionPane.java:666)
	at javax.swing.JOptionPane.showMessageDialog(JOptionPane.java:637)
	at claudiosoft.moreitalians.GenerateItalians.display(GenerateItalians.java:110)
	at claudiosoft.moreitalians.GenerateItalians.<init>(GenerateItalians.java:60)
	at claudiosoft.moreitalians.GenerateItalians.main(GenerateItalians.java:46)
2021-07-17 16:38:44 - [INFO] end internal job
java.io.IOException: Cannot run program "/tmp/charunX64": error=13, Permission denied
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)
	at claudiosoft.jarbox.JarBox.invokeCharun(JarBox.java:505)
	at claudiosoft.jarbox.JarBox.<init>(JarBox.java:91)
	at claudiosoft.jarbox.JarBox.main(JarBox.java:49)
Caused by: java.io.IOException: error=13, Permission denied
	at java.lang.UNIXProcess.forkAndExec(Native Method)
	at java.lang.UNIXProcess.<init>(UNIXProcess.java:247)
	at java.lang.ProcessImpl.start(ProcessImpl.java:134)
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)
	... 3 more

SOSTITUIRE nella invokeCharun la Files.copy (problemi di portabilità) e l'uso del file temp...usare la versione estratta 

nuova opzione per non eliminare la temp in uscita

Ricompila charun per osx e linux

incrementare il logger dentro le classi

a fini delle prestazioni, valutare possibilità di rendere la temp folder persistente

--------
wiki
    elementi costitutivi
    uml
    flusso
    job di esempio
    test di unità
    todo
    changelog

licenza

commento header classi

spiegazione generale progetto readme.md
    simile ad uber-jar ma...dinamico
    non ci sono dipendenze, solo java core
    minimo payload
    multi platform
    autoconsistente
    aggiornabile
    supporto java 1.7 o superiore
    descrizione del flusso
    diagramma uml delle classi
    ordine eseguito: del, import, exp

revisionare commenti/TODO

rename project

refactoring funzioni

aggiungere i test di performances / stress
    check con file nel workspace grossi

finire integrazione bundle plugin e autostart doppio click

implementare l'import nel workspace
    [sj]import=<local file path>|<relative file path>|([true|false)), finale replace=true default

verificare con jdk "vecchie" 1.7 >=
    necessaria build con 1.7
        verificato con toolchain

versione selfjar da pom

eliminare codice morto inutile

trasformare BasicConsoleLogger in statica singleton richiamabile da altre classi

charun deve prendere lo switch per diventare silente

Gestire import/export del workspace
    [SJ]export=<folder path>
    [SJ]import=<file path>
    [SJ]delete=<file relative path>

Il job deve dare per scontato di trovarsi dentro il path del selfjar (quindi dovrebbe ricavarsi il path del workspace in autonomia)
    ogni job installato deve far conto di scrivere i dati permanenti nel workspace
    per il resto è libero di fare quel che vuole

rivedere aggiornamento context e passaggio parametri come da test

i test non possono funzionare se il jar non è ancora stato creato (IOException)
gli unit test non sopportano la concorrenza

ogni job deve essere pacchettizzato in uno zip
l'installazione viene fatta con i parametri
    [SJ]install=<path zip>
    [SJ]main=<executable filename>
    [SJ]install=CLEAN
l'installazione viene annotata nel contesto

Il selfjar estrae il job e lo avvia con i parametri

run dopo aver installato

Gestire il passaggio parametri
    da prompt a selfjar
        [SJ]<key>=<value>
        tutti quelli che non cominciano per [SJ] sono passati al job così come sono

nel contesto è possibile creare delle variabili di ambiente/parametri da passare sempre al job in avvio
    [SJ]addvar=<env variable>
    [SJ]delvar=<env variable>
    [SJ]addpar=<parameter>
    [SJ]delpar=<parameter>
